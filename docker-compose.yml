version: '3.4'
services:
    # first, we define the three mongo servers that will act as replicas
    # here, we steup the hostname ports, and startup command
    # which is the same as discussed in the previous section
    db:
    image: postgres:11.16-alpine
    hostname: db
    restart:
      always
      # Optional: Enable TLS on PostgreSQL
      # Just drop your server.crt and server.key into folder 'deploy/pgsql/certs'
      # NOTE: Both files must have permissions u=rw (0600) or less
      #    command: >
      #      -c ssl=on
      #      -c ssl_cert_file=/var/lib/postgresql/certs/server.crt
      #      -c ssl_key_file=/var/lib/postgresql/certs/server.key
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=testman
    volumes:
      - ${POSTGRES_DATA_DIR:-./postgres-data}:/var/lib/postgresql/data:Z
      - ./deploy/pgsql/certs:/var/lib/postgresql/certs:ro

    # finally, we can define the initialization server
    # this runs the `rs.initiate` command to intialize
    # the replica set and connect the three servers to each other
    app-dev:
        env_file: .env
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - '3000:3000'
        container_name: testman-be
        volumes:
            - ~/logger/logs:/app/logs
        restart: always
        depends_on:
            - db
volumes:
    static: {}